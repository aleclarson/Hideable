// Generated by CoffeeScript 1.12.4
var Builder, Event, Null, assertTypes, cloneArgs, configTypes, emptyFunction, isDev, mixin;

emptyFunction = require("emptyFunction");

assertTypes = require("assertTypes");

cloneArgs = require("cloneArgs");

Builder = require("Builder");

Event = require("eve");

isDev = require("isDev");

Null = require("Null");

isDev && (configTypes = {
  isHiding: Boolean.or(Null),
  show: Function,
  hide: Function
});

module.exports = function(type, config) {
  isDev && assertTypes(config, configTypes);
  type.defineReactiveValues({
    isHiding: config.isHiding
  });
  type.defineMethods({
    __show: config.show,
    __hide: config.hide
  });
  return mixin.apply(type);
};

mixin = Builder.Mixin();

mixin.defineValues(function() {
  return {
    willShow: Event(),
    didShow: Event(),
    willHide: Event(),
    didHide: Event()
  };
});

mixin.defineMethods({
  show: function() {
    var args;
    if (this.isHiding === false) {
      return;
    }
    this.isHiding = false;
    args = cloneArgs(arguments);
    this.willShow.applyEmit(args);
    args[this.__show.length - 1] = this.didShow.bindEmit();
    return this.__show.apply(this, args);
  },
  hide: function() {
    var args;
    if (this.isHiding === true) {
      return;
    }
    this.isHiding = true;
    args = cloneArgs(arguments);
    this.willHide.applyEmit(args);
    args[this.__hide.length - 1] = this.didHide.bindEmit();
    return this.__hide.apply(this, args);
  }
});
